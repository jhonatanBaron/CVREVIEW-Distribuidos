
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: cvflow
      POSTGRES_USER: cvuser
      POSTGRES_PASSWORD: cvpass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  cvflow_api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://cvuser:cvpass@postgres:5432/cvflow
      - RABBITMQ_HOST=rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  # Interfaz web de gesti√≥n
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      
  parser_worker:
    build:
      context: .
      dockerfile: api/workers/Dockerfile
    volumes:
      - ./files:/files
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - WORKER_TYPE=parser
      - RABBITMQ_HOST=rabbitmq
  keyword_worker:
    build:
      context: .
      dockerfile: api/workers/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - WORKER_TYPE=keyword
      - RABBITMQ_HOST=rabbitmq
  cv_evaluator:
    build:
      context: .
      dockerfile: api/workers/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - WORKER_TYPE=cv_evaluator
      - RABBITMQ_HOST=rabbitmq
      - OPENAI_API_KEY=${OPENAI_API_KEY}


volumes:
  pgdata:
